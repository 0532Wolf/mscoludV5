server:
  port: 9527

spring:
  application:
    name: cloud-gateway #???????consul?nacos?????
  cloud:
    consul: #??consul??
      host: localhost
      port: 8500
      discovery:
        prefer-ip-address: true
        service-name: ${spring.application.name}
    gateway:
      routes:
        - id: pay_routh1 #pay_routh1                #路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001                #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service            #匹配后提供服务的路由地址
          predicates:
            - Path=/pay/gateway/get/**              # 断言，路径相匹配的进行路由
            - My=diamond
        #full配置
#            - name: My
#              args:
#                userType: diamond

        #            - After=2024-10-02T21:56:03.810917600+08:00[Asia/Shanghai] # 断言，在指定时间之后的请求进行路由
#            - Before= 2024-10-02T21:56:03.810917600+08:00[Asia/Shanghai] # 断言，在指定时间之前的请求进行路由
#            - Between=2024-10-02T21:56:03.810917600+08:00[Asia/Shanghai],2024-10-02T21:59:03.810917600+08:00[Asia/Shanghai] # 断言，在指定时间之间
#            - Cookie=username,zzyy # 断言，请求头中cookie中包含username=zzyy的请求进行路由 访问网关的时候带有cookie:username=zzyy 才能访问成功，而不是通过order访问
#            - Header=X-Request-Id,\d+ # 断言，请求头中X-Request-Id的值为整数的请求进行路由 访问网关的时候带有header:X-Request-Id=123 才能访问成功，而不是通过order访问
#            - Host=**.atguigu.com # 断言，请求头中Host的值为atguigu.com的请求进行路由 访问网关的时候带有header:Host=atguigu.com 才能访问成功，而不是通过order访问
#            - Method=GET # 断言，请求方法为GET的请求进行路由
#            - Query=username, \d+ # 断言，请求参数中username的值为整数的请求进行路由 访问网关的时候带有query:username=123 才能访问成功，而不是通过order访问
#            - RemoteAddr=IP_ADDRESS # 断言，请求来源IP为IP_ADDRESS的请求进行路由 访问网关的时候带有header:RemoteAddr=127.0.0.1 才能访问成功，而不是通过order访问



        - id: pay_routh2 #pay_routh2                #路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001                #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service           #匹配后提供服务的路由地址
          predicates:
            - Path=/pay/gateway/info/**              # 断言，路径相匹配的进行路由

        - id: pay_routh3 #pay_routh3
          uri: lb://cloud-payment-service                #匹配后提供服务的路由地址
          predicates:
#            - Path=/pay/gateway/filter/**              # 断言，路径相匹配的进行路由
#            - Path=/gateway/filter/**              # 断言，为配合PrefixPath测试过滤，暂时注释掉/pay
#            - Path=/XYZ/abc/{segment}           # 断言，为配合SetPath测试，{segment}的内容最后被SetPath取代
            - Path=/pay/gateway/filter/** # 真实地址
          filters:
            - AddRequestHeader=X-Request-atguigu1,atguiguValue1  #请求头kv，若一头含有多参则重写一行设置
            - My=atguigu
#            - RedirectTo=302, http://www.atguigu.com/ # 访问http://localhost:9527/pay/gateway/filter跳转到http://www.atguigu.com/
#            - SetPath=/pay/gateway/{segment}  # {segment}表示占位符，你写abc也行但要上下一致
#            - PrefixPath=/pay # http://localhost:9527/pay/gateway/filter
#            - AddRequestHeader=X-Request-atguigu1,atguiguValue1  # 请求头kv，若一头含有多参则重写一行设置
#            - AddRequestHeader=X-Request-atguigu2,atguiguValue2
#            - RemoveRequestHeader=sec-fetch-site      # 删除请求头sec-fetch-site
#            - SetRequestHeader=sec-fetch-mode, Blue-updatebyzzyy # 将请求头sec-fetch-mode对应的值修改为Blue-updatebyzzyy
#            - AddRequestParameter=customerId,9527001 # 新增请求参数Parameter：k ，v
#            - RemoveRequestParameter=customerName   # 删除url请求参数customerName，你传递过来也是null
#            - AddResponseHeader=X-Response-atguigu, BlueResponse # 新增请求参数X-Response-atguigu并设值为BlueResponse
#            - SetResponseHeader=Date,2099-11-11 # 设置回应头Date值为2099-11-11
#            - RemoveResponseHeader=Content-Type # 将默认自带Content-Type回应属性删除
